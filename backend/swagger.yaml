openapi: 3.0.0
info: 
  title : Netflix clone API
  description: API documentation for a Simple Netflix clone application
  version: 1.0.0
  contact:
    name: Your Name
    email: your.email@example.com
    url: https://github.com/your-username/your-repo

# TODO: fix or integrate with production url
servers:
  - url: "{protocol}://localhost:8081/api/{version}"
    description: "This is the  version of our application "
 
    variables:
      version:
        enum:
          - v1 
          - v2
        default: v1
      protocol:
        enum:
          - http
          - https 
        default: http

paths:
  # user signup - 
  /auth/signup:
    post: 
      tags: 
        - User Authentication
      summary: User signup
      description: Create a new user account
      consumes:
        application/json
      produces:
        application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignUpRequest"
      responses:
          "201":
            description: Return User object data
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    statusCode:
                    type: number
                    example: 201
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: successfully register the User
                  $ref: "#/components/schemas/User"
          "400":
            description: Bad user request 
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    statusCode:
                      type: number
                      example: 400
                    success: 
                      type: boolean
                      default: false
                    message:
                      type: string
                      example: Email and Password are required
                    data:
                      type: object
                      example: null
          "500":
            description: Internal server Error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    statusCode:
                      type: number
                      default: 500
                    success:
                      type: boolean
                      default : false
                    message:
                      type: string
                      default: internal server Error                 

  /auth/signin:
   post:
    tags:
     - User Authentication
    summary : User signin/login
    description: User signin or login to the account
    consumes:
      - application/json
    produces:
      - applications/json
    requestBody:
      required: true
      content:
        application/json : # Media type
          schema:
            $ref: "#/components/schemas/UserSignUpRequest"
    responses:
        "200": # status code
          description: "return user data object"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  message:
                    type: string                                             
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default : false
                  message:
                    type: string     



#### Components where reusable schemas are store ######
components:
  securitySchemes:
    BasicAuth:
      type: http 
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
    cookieAuth:
      type: apiKey
      in: cookie 
      name: token

  security: 
    - BasicAuth: []
    - BearerAuth: []

# re-usable schema
  schemas:
    User:
      type: object
      properties:
        # statusCode:
        #   type: number
        #   example: 201
        # success:
        #   type: boolean
        #   example: true
        # message:
        #   type: string
        #   example: successfully register the User
        data:
          type: object
          properties:
            email:
              type: string
              format: email
              example: johndoe@gmail.com
            plan:
              type: string
              example: "plan Name"
            watchHistory:
              type: array
              example: ["movie/series Ids"]
            watchList:
              type: array
              example: ["movie/series Ids"]
            role: 
              type: string
              example: user
            _id:
              type: string 
              example: 64a3ffef83e36e95ec51e6333
            createdAt:
              type: date
              example: 2023-07-04T11:18:07.265+00:00
            updatedAt:
              type: date
              example: 2023-07-04T11:18:07.265+00:00
            __v: 
              type: number
              example: 0
            token:
              type: string
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YTk4NzFmMTUxZWFlYmVmMTZmZGFmMSIsImVtYWlsIjoibWFtYWFuZ0BnbWFpbC5jb20iLCJyb2xlIjoiVVNFUiIsImlhdCI6MTY4ODgzMTc3NiwiZXhwIjoxNjg4OTE4MTc2fQ.z9HQvqgnXfQN6GtYzG8H1nVwVXwzU35UDm6XIsJKVRo
        
      

    UserSignUpRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: johndoe@gmail.com
        password:
          type: string
          example: demoPassword@1
      required:
        - email
        - password

            
    